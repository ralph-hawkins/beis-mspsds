= form.hidden_field :is_result, value: !test.requested?
fieldset.govuk-fieldset
  - if allow_product_linking
    legend.govuk-fieldset__legend.govuk-fieldset__legend--l
      - if test.requested?
        | Which product should be tested?
      - else
        | Which product was tested?
      .govuk-form-group.full-width class=("govuk-form-group--error" if test.errors[:product].any?)
        - if investigation.products.empty?
          span.govuk-hint
            ' There are no products on this case.
            = link_to "Add a product", new_investigation_product_path(investigation)
            |  to send it for testing.
        - elsif @investigation.products.size == 1
          = form.text_field :product_name, value: @investigation.products.first.name,
                  disabled: true, class: "govuk-input govuk-!-width-two-thirds"
          = form.hidden_field :product_id, value: @investigation.products.first.id
        - else
          span.govuk-hint
            ' Only products already added to the case are listed.
            = link_to "Add a product", new_investigation_product_path(investigation)
          = form.collection_select :product_id, investigation.products, :id, :name,
                  { include_blank: true }, class: "govuk-select", id: "product-picker"

  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    | Against which legislation?
  .govuk-form-group class=("govuk-form-group--error" if test.errors[:legislation].any?)
    span.govuk-hint
      | Select the relevant legislation from the list.
    = form.select :legislation, relevant_legislation, { include_blank: true },
            class: "govuk-select", id: "legislation-picker"

  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    - if test.requested?
      | When did you request testing?
    - else
      | When was the test conducted?
  = render "date_input", form: form

- if !test.requested?
  = render "form_components/govuk_radios", form: form, key: :result,
          fieldset: { legend: { text: "What was the test result?", classes: "govuk-fieldset__legend--l" } },
          items: Test::Result.results.map { |result, label| { text: label, value: result } }

fieldset.govuk-fieldset
  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    | Further details
  .govuk-form-group class=("govuk-form-group--error" if test.errors[:details].any?)
    = form.text_area :details, class: "govuk-textarea", rows: 5, maxlength: 1000

= render "related_attachment_fields", form: form,
        file_blob: @file_blob, attachment_name: :file, title: "Related attachments"
